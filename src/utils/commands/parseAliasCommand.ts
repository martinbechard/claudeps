/**
 * Copyright (c) 2024 Martin Bechard <martin.bechard@DevConsult.ca>
 * This software is licensed under the MIT License.
 * File: src/utils/commands/parseAliasCommand.ts
 * This was generated by Claude Sonnet 3.5, with the assistance of my human mentor
 */

import { ParsedCommandLine, ScriptStatement } from "../../types";

/**
 * Parses an alias command into a script object
 * @param command - The parsed command name
 * @param args - Array of command arguments
 * @returns Parsed script object
 * @throws Error if command syntax is invalid
 */
export function parseAliasCommand(
  parsedCommandLine: ParsedCommandLine
): ScriptStatement {
  const { command, prompt } = parsedCommandLine;

  const baseStatement = new ScriptStatement({
    isCommand: true,
    command: command,
    options: {},
    prompt: "",
  });

  switch (command) {
    case "alias": {
      // Expect format: /alias @name text
      const aliasArgs = prompt.trim().split(/\s+/);
      if (aliasArgs.length < 2 || !aliasArgs[0].startsWith("@")) {
        throw new Error("Invalid alias syntax. Use: /alias @name text");
      }
      const aliasName = aliasArgs[0].substring(1);
      const aliasText = aliasArgs.slice(1).join(" ");
      if (!isValidAliasName(aliasName)) {
        throw new Error(
          "Invalid alias name. Only alphanumeric characters and underscores are allowed."
        );
      }
      return new ScriptStatement({
        isCommand: true,
        command: command,
        aliasCommand: {
          type: "alias",
          name: aliasName,
          text: aliasText,
        },
      });
    }

    case "delete_alias": {
      // Expect format: /delete_alias @name
      const deleteArgs = prompt.trim().split(/\s+/);
      if (deleteArgs.length !== 1 || !deleteArgs[0].startsWith("@")) {
        throw new Error(
          "Invalid delete alias syntax. Use: /delete_alias @name"
        );
      }
      const deleteName = deleteArgs[0].substring(1);
      if (!isValidAliasName(deleteName)) {
        throw new Error(
          "Invalid alias name. Only alphanumeric characters and underscores are allowed."
        );
      }

      return new ScriptStatement({
        isCommand: true,
        command: command,
        aliasCommand: {
          type: "delete_alias",
          name: deleteName,
        },
      });
    }

    case "list_alias": {
      // Expect format: /list_alias (no arguments)
      if (prompt.trim().length > 0) {
        throw new Error(
          "List alias command takes no arguments. Use: /list_alias"
        );
      }

      return new ScriptStatement({
        isCommand: true,
        command: command,
        aliasCommand: {
          type: "list_alias",
        },
      });
    }

    default:
      throw new Error(`Unknown alias command: ${command}`);
  }
}

/**
 * Validates alias command argument format
 * @param name - Alias name to validate
 * @returns True if name is valid
 */
export function isValidAliasName(name: string): boolean {
  return /^[a-zA-Z0-9_]+$/.test(name);
}
