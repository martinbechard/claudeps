/**
 * Copyright (c) 2024 Martin Bechard <martin.bechard@DevConsult.ca>
 * This software is licensed under the MIT License.
 * File: /Users/martinbechard/dev/claudeext/src/ui/components/HelpManager.ts
 * This was generated by Claude Sonnet 3.5, with the assistance of my human mentor
 */

/**
 * Manages help text display and formatting for the extension.
 */
export class HelpManager {
  private readonly outputElement: HTMLElement;
  private static readonly HELP_TEXT = `
    ClaudeScript v1.5
    
    1. Simple Prompt:
    Just type your prompt and it will be sent once.
    
    2. Commands:
    
    Content Commands:
    /ch[at] - Export chat without artifacts
    /ch[at] /a[rtifacts] - Export chat including artifacts
    /ch[at] /m[ultiple] - Export artifacts as separate files
    /a[rtifacts] - Export only artifacts as markdown
    /a[rtifacts] /m[ultiple] - Export artifacts as separate files
    
    Project Commands:
    /p[roject] - List conversations in current project
    /sp[search_project] <text> - Search project conversations
    /qp[query_project] <prompt> - Query all conversations
    
    Knowledge & Settings:
    /k[nowledge] - Access knowledge base and documentation
    /s[ettings] - View current settings
    /s[ettings] <option>=<value> - Update settings
      Options: enable_api, api_key, model, theme, debug_trace, debug_window
      Example: /settings theme=dark
    
    Alias Commands:
    /al[ias] @name <text> - Create or update an alias
    /da[delete_alias] @name - Delete an alias
    /la[list_alias] - List all aliases
    
    3. Loop Command Format:
    /r[epeat] [/max number] [/stop_if condition]
    or
    /r[epeat] [/max number] [/stop_if_not condition]
    
    Examples:
    Simple prompt:
    Tell me a joke
    
    With aliases:
    /alias @joke Tell me your best joke
    @joke
    
    With repeat and max tries:
    /repeat /max 3 /stop_if success
    Tell me a joke
    
    With repeat until condition:
    /repeat /stop_if laugh
    Tell me a joke
    
    Note: Commands are context-sensitive:
    - Project commands require being in a project context
    - Content commands require being in a chat context
    - Settings and alias commands are available in any context`.trim();

  /**
   * Creates a new HelpManager instance.
   * @param outputElement - Element to display help text in
   */
  constructor(outputElement: HTMLElement) {
    this.outputElement = outputElement;
  }

  /**
   * Helper method to format and display text content
   * @param text - Text content to display
   */
  private formatContent(text: string): void {
    this.outputElement.innerHTML = "";
    const lines = text.split("\n");
    lines.forEach((line, index) => {
      const div = document.createElement("div");
      div.textContent = line;
      div.style.whiteSpace = "pre";
      this.outputElement.appendChild(div);
      // Add a newline after each line except the last one
      if (index < lines.length - 1) {
        this.outputElement.appendChild(document.createTextNode("\n"));
      }
    });
  }

  /**
   * Displays the help text in the output element.
   */
  public show(): void {
    this.formatContent(HelpManager.HELP_TEXT);
  }

  /**
   * Updates the help text content dynamically.
   * @param newText - New help text content
   */
  public updateContent(newText: string): void {
    this.formatContent(newText);
  }

  /**
   * Clears the help text display.
   */
  public clear(): void {
    this.outputElement.innerHTML = "";
  }
}
